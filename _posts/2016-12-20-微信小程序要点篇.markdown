---
layout: post
title: "微信小程序要点篇"
date: "2016-12-20" 
categories:
    - Other
description: 
image: 
image-sm: https://s27.postimg.org/97acz90fn/image.jpg
---

## 微信小程序要点篇  

### 简易教程篇  

#### 注册并获取小程序的 APPID  
[微信小程序接入文档](https://mp.weixin.qq.com/debug/wxadoc/introduction/?t=20161107)  

#### 创建项目 & 编写代码  

* 创建小程序实例  
    
    app.js   
        小程序的脚本代码。在该文件中可以监听并处理小程序的生命周期函数、声明全局变量。  
    app.json  
        小程序的全局配置。在该文件中配置小程序的页面组成，窗口背景色，导航条样式，默认标题。  
        *注：该文件不可添加任何注释*  
    app.wxss   
        小程序的公共样式表。在页面组件的 class 属性上可直接使用 app.wxss 中声明的样式规则。  

* 创建页面  

    每一个小程序的页面是由**同路径下同名（必须）**的四个不同后缀文件组成：
        
    - index.js    
        脚本文件
    - index.wxml  
        页面结构文件  
    - index.wxss  
        样式表文件
    - index.json  
        配置文件
        

* 项目预览  

### 框架  

#### 配置  
配置项列表（app.json)：  

* pages（必填）  
        数组，每一项代码对应页面的【路径+文件名】，数组第一项代表项目的初始页面。当新增或减少页面时，都需要对 pages 作对应的修改。  
        例：  
            // 文件名不需要带后缀，框架会自动对.js .wxml .wxss .json 进行整合   
            {  
                pages: [  
                    "pages/index/index",  
                    "pages/logs/logs"  
                ]  
            }  
        
* window  
        设置小程序的状态栏、导航条、标题、窗口背景色。  

        - navigationBarBackgroundColor 导航栏背景颜色
        - navigationBarTextStyle 导航栏标题颜色
        - navigationBarTitleText 导航栏标题文字内容
        - backgroundColor 窗口的背景色
        - backgroundTextStyle 下拉背景字体、loading 图的样式，仅支持 dark/light
        - enablePullDownRefresh 是否开启下拉刷新
        
* tabBar  
        配置客户端窗口底部的 tab 栏，包括样式和切换的对应页面。配置项最少2个，最多5个。  
        
        - color 文字默认颜色
        - selectedColor 文字选中时的颜色
        - backgroundColor 选项卡背景色
        - borderStyle 边框的颜色，仅支持 black/white
        - list   
            tab 列表，数组，每一项为一个对象，包含：  
                - pagePath 页面路径，必须在 pages 中先定义
                - text 按钮文字
                - iconPath 图片路径，icon 大小限制为40kb
                - selectedIconPath 选中时的图片路径，icon大小限制为40kb
        - position 可选值 bottom、top
        
* networkTimeout   
        各种网络请求的超时时间。  
        - request
        - connectSocket
        - uploadFile
        - downloadFile

* debug  
        debug 模式下的调试信息包括：
        - Page 的注册
        - 页面路由
        - 数据更新
        - 事件触发

页面的配置（page.json):  
每一个页面的配置文件仅能设置 window 相关的配置项。因此可省略 window 。例如：  

    {
        "navigationBarBackgroundColor": "#ffffff",
        "navigationBarTextStyle": "black",
        "navigationBarTitleText": "微信接口功能演示",
        "backgroundColor": "#eeeeee",
        "backgroundTextStyle": "light"
    }

#### 逻辑层（App Server）  

* 注册程序  

    - App() 用来注册一个小程序。必须在 app.js 中注册，且不能注册多个。不要在 app.js 中调用 getApp()。

        App({
            onLaunch: function () {
                //监听小程序初始化
                //当小程序初始化完成时，会触发一次，全局仅触发一次
                //此时不能调用 getCurrentPage()
            },
            onShow: function () {
                //监听小程序显示
                //当小程序启动，或从后台进入前台显示会触发 onShow
            },
            onHide: function () {
                //监听小程序隐藏
                //当小程序从前台进入后台会触发 onHide
            },
            globalData: "..."   //开发者可以添加任意的函数或数据到 Object 参数中，用 this 可以访问
        })  
    
    *前台 & 后台：当用户点击左上角的 关闭 或通过按 Home 键离开微信，此时小程序进入后台。当再次进入微信或再次打开小程序，则从后台进入前台。*  
    **注：只要当小程序进入后台一定时间或占用系统资源过高，才会被真正的销毁。*  
    
    - App.prototype.getCurrentPage() 将被 getCurrentPages 替代。
    - getApp() 可以获取到小程序的实例。使用该函数获取实例后，不要私自调用生命周期函数。  

* 注册页面  
    - Page() 用来注册一个页面。例如：  
        
            Page({
                data: {
                    //页面的初始数据
                },
                onLoad: function () {
                    //监听页面加载
                    //一个页面只会调用一次
                    //接收页面参数可以获取wx.navigateTo和wx.redirectTo及<navigator/>中的 query
                },
                onReady: function () {
                    //监听页面初次渲染完成
                    //一个页面仅调用一次
                    //对界面的设置如wx.setNavigationBarTitle请在onReady之后设置
                },
                onShow: function () {
                    //监听页面显示
                    //每次打开页面都会调用一次
                },
                onHide: function () {
                    //监听页面隐藏
                    //当 navigateTo 或底部 tab 切换时调用
                },
                onUnload: function () {
                    //监听页面卸载
                    //当 redirectTo 或 navigateBack 的时候调用
                },
                onPullDownRefresh: function () {
                    //监听用户下拉动作
                    //需要在config的window选项中开启enablePullDownRefresh
                    //当处理完数据刷新后，wx.stopPullDownRefresh可以停止当前页面的下拉刷新
                },
                onReachBottom: function () {
                    //页面上拉触底事件的处理函数
                },
                ... //开发者添加的任意函数或数据
            })  
    
    - Page.prototype.setData()  
        用于将数据从逻辑层发送到视图层，同时改变对应的 this.data的值。直接修改 this.data 的值无效。单次设置的数据不能超过1024KB。例如：  
        
            data: {
                text: "12343",
                array: [{text: "000"}]
            }

            this.setData({
                text: "changed data",
                "array[0].text": "123"
            })
    
    - getCurrentPages()
* 模块化  
    * 模块只有通过 module.exports 或者 exports 才能对外暴露接口。  
    * 目前不支持 node_modules ，可以将相关代码拷贝到小程序中。  

            
            //common.js
            function sayHello (name) {
                console.log(`Hello ${name}!`)
            }
            
            module.exports.sayHello = sayHello
            
            //引入模块
            var common = require("common.js")
            Page({
                hello: function () {
                    common.sayHello("world")
                }
            })
            
* [API](https://mp.weixin.qq.com/debug/wxadoc/dev/api/?t=20161122) 
